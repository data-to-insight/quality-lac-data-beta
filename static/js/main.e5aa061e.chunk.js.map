{"version":3,"sources":["helpers/postcodeSignature.ts","helpers/sentry.js","api.ts","components/ChildSelector.tsx","config.ts","components/DataTable.tsx","components/TabbedData.tsx","components/ErrorDisplay.tsx","components/Validator.tsx","components/DropzoneUploader.tsx","components/Uploader.tsx","helpers/report/childErrorReport.ts","helpers/authorityData.ts","helpers/googleAnalytics.ts","components/Dashboard.tsx","App.jsx","index.jsx"],"names":["public_key","captureException","err","context","Sentry","handleUploaded903Data","uploadedFiles","selectedErrors","metadata","a","pyodide","window","console","log","globals","set","filter","e","selected","map","code","uploadErrors","runPythonAsync","error","pythonError","toString","errorLines","split","push","length","data","get","toJs","errors","errorDefinitions","loadPyodide","runPython","indexURL","loadPackage","process","REACT_APP_MICROPIP_MODULES","extra_modules","loadErrorDefinitions","errorDefinitionsPy","description","affectedFields","affected_fields","ChildSelector","childIds","setSelected","rows","sort","b","localeCompare","entries","i","childId","numErrors","selectionTarget","cellStyle","backgroundColor","Row","Cell","onClick","style","float","paddingLeft","fontSize","paddingRight","height","headerTableName","childColumnName","TableStyles","styled","div","DataTable","rowData","highlight","header_elements","all_rows","Array","from","keys","header","CellHeader","row","row_elements","j","rowHeader","r","highlighted","has","JSON","stringify","className","Number","isNaN","undefined","TabbedData","tableData","errorLocations","excludedTable","useState","tabIndex","setTabIndex","shownTables","tableName","tabTitles","index","Tab","tabPanels","Panel","overflowX","Title","List","ErrorStyles","ErrorDisplay","validatedData","setChildFilter","setErrorFilter","setShown","innerRef","filterText","setFilterText","selectedError","setSelectedError","errorRows","useMemo","errorCounts","Map","forEach","locationToError","errorCodes","errorCode","errorCountsArr","firstCount","count","errorDetails","isSelected","useEffect","clearFilters","useCallback","ref","minLength","debounceTimeout","onChange","event","target","value","placeholder","Validator","childFilter","errorFilter","selectedChild","setSelectedChild","errorDisplayShown","setErrorDisplayShown","errorDisplayRef","useRef","scrollTo","handleClickOutside","current","contains","document","addEventListener","removeEventListener","filteredData","_","key","parsedData","wantedTable","childData","filterDataToChildId","errorLocation","fileName","Set","field","add","childIdsWithErrors","errorsByChildId","dataErrors","allErrors","getErrorsByChildId","filteredIdsWithErrorCounts","filteredIds","includes","childErrors","getErrorsForChild","errorToString","mb","setWidth","stopPropagation","display","width","UploadStyle","DropzoneUploader","onFiles","accept","displayedFiles","setError","onDrop","acceptedFiles","rejectedFiles","file","message","useDropzone","getRootProps","getInputProps","isDragActive","name","color","UploaderStyles","Uploader","currentFiles","addFileContent","setSelectedErrors","fileMode","setFileMode","onFilesUploaded","reader","FileReader","onabort","onerror","onload","fileText","result","readAsArrayBuffer","summary","f","open","saveErrorSummary","report_type","time","dayjs","format","report_name","report","report_data","csv_report","errorSummaryContent","Blob","type","destroy","saveAs","saveLoadedFiles","table_name","csv_string_dict","csv_string","csvDownloadContent","laMap","x","la_id","UTLA21CD","la_name","UTLA21NM","reduce","laData","Object","values","gtag","action","event_category","event_label","Dashboard","loadingText","setLoadingText","fileContents","setFileContents","setUploadErrors","setValidatedData","localAuthority","setLocalAuthority","collectionYears","num_years","currentDate","Date","currentYear","getFullYear","getMonth","years","year","getCollectionYears","collectionYear","setCollectionYear","uploadedFile","clearAndRestart","runValidation","newValidatedData","pythonErrors","downloadCSVs","downloadLoadedCSVs","toggleErrorSelection","toggledError","newSelectedErrors","errorCopy","setAllErrors","newState","storedValue","localStorage","getItem","some","la","find","changeLocalAuthority","ev","setItem","input","label","LoadingBox","loading","checked","marginRight","buttonColour","disabled","children","position","pointerEvents","justifyContent","flexWrap","textAlign","opacity","Start","start","as","Link","to","href","App","WidthContainer","level","Main","path","component","exact","SENTRY_DSN","dsn","_init","sentryInit","measurementID","id","getElementById","script","createElement","async","src","head","append","dlScript","innerHTML","analyticsInit","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e5aa061e.chunk.js","sourcesContent":["export const public_key = `\n-----BEGIN RSA PUBLIC KEY-----\nMIICCgKCAgEAtIIMSI/vwErk16clFAE5BC6FrKeR3ihH8Hgjy6wATMrxXiOU1u9+\nYPCI1M17bECMey0XpnEtt0SJR8zhsqNlR4XT5NahhiKPLdrj35t0+/2hgyQ9C4Gm\njx/Y9hEdgD6yRbFhPIK22zE0Sadfxl3KxSy33Meh3UO6n47cGG4jhHmH5HF3+aI/\n7VFYaxTF2B4yrfX0PAwzI9nEsezX1H/P4SgwCicHtqt2EbhQ5OWNNpsboUVhF+sa\ninAWjN3cn4VLY9mQGdeISeVQrFFTS6kNrHZkeNxI846BGxeHV7OiPie4SiQby4h9\n1FOvQyjq37FbeX1eehiSbFYvuZ00Fh3wDNlKWDMYUV+U2nJQQX10c1pWRw3vfqgw\nOhGoYeXVe2/uM40nM333b5zErpCGy/gfTu4rhwUQx1ujiUdCkZiwy6UqduV1JOvD\n0JDpce+rXKw69JSxfof5x4DFEG2qk3bcD4SwiVyQBOiGmCYELXjGQamezm3xqnlg\nCBDwdIITa4Xxax3gIxG1nir86Idiy1OA4jXFPN5LESB1Ydvbd26roHrSdy027vAh\nfp17wHu2FOeGCoWN7fkHD8ncWZkYA61WOgwj9Q3K5VeBHJAS9puLda9TzS8NRR1B\na0Jal2jsQ7ISFw/eo//fdF9xnxTxuRCbj2+6QGvBpi2N8Z6O4yikBdECAwEAAQ==\n-----END RSA PUBLIC KEY-----\n`\n\n","import * as Sentry from \"@sentry/react\";\n\nconst _init = () => {\n    const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN;\n    if (!SENTRY_DSN) {\n        return;\n    }\n    Sentry.init({\n        dsn: SENTRY_DSN,\n    });\n}\n\nexport const init = () => {\n    try {\n        _init()\n    } catch {\n        console.error(\"Failed to initialise Sentry\")\n    }\n}\n\nexport const captureException = (err, context) => {\n    try {\n        Sentry.captureException(err, context);\n    } catch {\n    }\n}","import { ValidatedData, UploadedFile, ErrorSelected, UploadMetadata } from './types';\nimport {public_key} from \"./helpers/postcodeSignature\";\nimport {captureException} from \"./helpers/sentry\";\n\nexport async function handleUploaded903Data(uploadedFiles: Array<UploadedFile>, selectedErrors: Array<ErrorSelected>, metadata: UploadMetadata): Promise<[ValidatedData, Array<any>]> {\n  const pyodide = window.pyodide;\n\n  console.log('Passing uploaded data to Pyodide...');\n  pyodide.globals.set(\"uploaded_files\", uploadedFiles);\n  pyodide.globals.set(\"error_codes\", selectedErrors.filter(e => e.selected).map(({ code }) => code));\n  pyodide.globals.set(\"metadata\", metadata);\n\n  let uploadErrors = [];\n  try {\n      await pyodide.runPythonAsync(` \n        from validator903.validator import Validator\n        from validator903.report import Report\n        from validator903.config import errors as configured_errors\n        from dataclasses import asdict\n       \n        validator = Validator(metadata.to_py(), uploaded_files.to_py())\n        csv_string_dict = {key: df.to_csv(index=False) for key, df in validator.dfs.items() if key != 'metadata'}\n\n        result = validator.validate(error_codes.to_py())\n        print(\"Finished Validating\")\n        \n        report = Report(result)\n        print(\"Created report\")\n        \n        cr = report.child_report\n        print(\"Child report generated\")\n        \n        js_files = {k: [t._asdict() for t in df.itertuples(index=True)] for k, df in validator.dfs.items()}\n        \n        error_definitions = {code: asdict(definition[0]) for code, definition in configured_errors.items()}\n\n        errors = {}\n        for row in report.child_report.itertuples():\n            errors.setdefault(row.Table, {}).setdefault(row.RowID, []).append(row.Code)\n                \n      `);\n  } catch (error) {\n      console.error('Caught Error!', error)\n      const pythonError = (error as Error).toString()\n      captureException(error, {pythonError})\n      const errorLines = pythonError.split('\\n') // We need to take the second to last line to get the exception text.\n      uploadErrors.push(errorLines[errorLines.length - 2]);\n  }\n\n  const data = pyodide.globals.get(\"js_files\")?.toJs();\n  const errors = pyodide.globals.get(\"errors\")?.toJs();\n  const errorDefinitions = pyodide.globals.get(\"error_definitions\")?.toJs();\n\n  console.log('Python calculation complete.')\n\n  return [{ data, errors, errorDefinitions }, uploadErrors]\n}\n\nexport async function loadPyodide() {\n  if (!window.pyodide?.runPython) {\n    window.pyodide = await window.loadPyodide({ indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.0/full/\" });\n    await window.pyodide.loadPackage(['micropip']);\n    console.log('Loaded pyodide, now loading custom library...');\n\n    window.pyodide.globals.set(\"pc_pubkey\", public_key);\n    await window.pyodide.runPythonAsync(`\n      import os\n      os.environ[\"QLACREF_PC_KEY\"] = pc_pubkey\n    `);\n\n    if (process.env.REACT_APP_MICROPIP_MODULES) {\n      const extra_modules = process.env.REACT_APP_MICROPIP_MODULES.split(\" \")\n      window.pyodide.globals.set(\"micropip_extra_modules\", extra_modules);\n    }\n\n    await window.pyodide.runPythonAsync(`\n      import micropip\n      import logging\n      logging.basicConfig(level=logging.INFO)\n     \n      await micropip.install('${process.env.REACT_APP_VALIDATOR_RELEASE}')\n\n      try:\n        for mod in micropip_extra_modules:\n          print(f\"Loading extra module from: {mod}\")\n          await micropip.install(mod)\n      except NameError:\n        pass\n    `);\n    console.log('Loaded custom libary.');\n  } else {\n    console.log('Pyodide already loaded.');\n  }\n}\n\nexport async function loadErrorDefinitions(): Promise<Array<ErrorSelected>> {\n  const pyodide = window.pyodide;\n  await pyodide.runPythonAsync(`\n    from validator903.config import errors as configured_errors\n    all_error_definitions = [definition[0] for definition in configured_errors.values()]\n  `);\n\n  let errorDefinitionsPy: any = window.pyodide.globals.get(\"all_error_definitions\");\n  let errorDefinitions: Array<ErrorSelected> = [];\n  for (let error of errorDefinitionsPy) {\n    errorDefinitions.push({\n      code: error.code,\n      description: error.description,\n      affectedFields: error.affected_fields,\n      selected: true,\n    })\n  }\n  return errorDefinitions\n}","import * as GovUK from 'govuk-react';\nimport React from 'react';\n\ninterface ChildSelectorProps {\n    childIds: Array<[string, number]>,\n    selected: string | null,\n    setSelected: (arg: string | null) => void,\n}\n\nexport default function ChildSelector({ childIds, selected, setSelected }: ChildSelectorProps) {\n  let rows = [];\n  for (const [i, [childId, numErrors]] of childIds.sort((a, b) => a[0].toString().localeCompare(b[0].toString())).entries()) {\n    let selectionTarget: string | null = childId;\n    let cellStyle = null;\n    \n    if (childId === selected) {\n      selectionTarget = null;\n      cellStyle = {backgroundColor: '#ccc'}\n    }\n\n    rows.push(\n      <GovUK.Table.Row key={i}>\n        <GovUK.Table.Cell key={i} onClick={() => setSelected(selectionTarget)} style={cellStyle}>\n          <div style={{float: 'left', paddingLeft: '10px'}}>{childId}</div>\n          <div style={{float: 'right', fontSize: '0.8em', paddingRight: '10px'}}>{numErrors > 0 ? `${numErrors} errors` : 'OK'}</div>\n        </GovUK.Table.Cell>\n      </GovUK.Table.Row>\n    );\n  }\n\n  return (\n    <div style={{'overflowY': 'scroll', height: '100vh'}}>\n      <GovUK.Table style={{fontSize: '1em'}}>\n        {rows}\n      </GovUK.Table>\n    </div>\n  )\n}","/**\n * Configuration for the constants used in this code.\n * \n * headerTableName - The name of the header table (which is displayed separately from the other tables)\n * childColumnName - The name of the column that is present in each table and contains the unique Child ID.\n */\nexport const headerTableName = 'Header';\nexport const childColumnName = 'CHILD';","import styled from 'styled-components';\nimport * as GovUK from 'govuk-react';\nimport { ReactElement } from 'react';\nimport { DataRow } from '../types';\n\ninterface DataTableProps {\n  rowData: Array<DataRow> | undefined,\n  highlight: Set<string>,\n}\n\nconst TableStyles = styled.div`\ntable {\n  font-size: 14px;\n}\n\ntd {\n  padding: 5px;\n}\n\n.error {\n  color: #D8000C;\n  background-color: #FFD2D2;\n}\n`\n\nexport default function DataTable({ rowData, highlight }: DataTableProps): ReactElement {\n  let header_elements = [];\n  let all_rows = [];\n\n  if (rowData && rowData.length > 0) {\n    for (const [i, header] of Array.from(rowData[0].keys()).entries()) {\n      header_elements.push(<GovUK.Table.CellHeader key={i}>{header}</GovUK.Table.CellHeader>);\n    }\n\n    for (const [i, row] of rowData.entries()) {\n      let row_elements = [];\n      for (const [j, [rowHeader, r]] of Array.from(row.entries()).entries()) {\n        const highlighted = highlight && highlight.has(JSON.stringify([row.get(\"Index\"), rowHeader]))\n        row_elements.push(<GovUK.Table.Cell key={j} className={highlighted ? 'error' : null}>{Number.isNaN(r) || r === undefined ? '[null]' : r.toString()}</GovUK.Table.Cell>);\n      }\n      all_rows.push(<GovUK.Table.Row key={i}>{row_elements}</GovUK.Table.Row>);\n    }\n\n    return (\n      <TableStyles>\n        <GovUK.Table>\n            <GovUK.Table.Row>\n              {header_elements}\n            </GovUK.Table.Row>\n            {all_rows}\n        </GovUK.Table>\n      </TableStyles>\n    )\n  } else {\n    return <GovUK.Paragraph>No data found for table.</GovUK.Paragraph>\n  }\n}","import * as GovUK from 'govuk-react';\nimport { useState, ReactElement } from 'react';\nimport DataTable from './DataTable';\nimport { ParsedData, ErrorLocations } from './../types';\n\ninterface TabbedDataProps {\n  tableData: ParsedData,\n  errorLocations: ErrorLocations,\n  excludedTable: string | null,\n}\n\nexport default function TabbedData({ tableData, errorLocations, excludedTable }: TabbedDataProps): ReactElement {\n  const [tabIndex, setTabIndex] = useState(0);\n  const shownTables = Array.from(tableData.keys()).filter(tableName => tableName !== excludedTable);\n  shownTables.sort();\n\n  const tabTitles = Array.from(shownTables.entries()).map(([index, tableName]) => {\n    return <GovUK.Tabs.Tab key={index} onClick={() => setTabIndex(index)} selected={tabIndex === index}>{tableName}</GovUK.Tabs.Tab>;\n  });\n\n  const tabPanels = Array.from(shownTables.entries()).map(([index, tableName]) => {\n    return (\n      <GovUK.Tabs.Panel key={index} selected={tabIndex === index} style={{overflowX: 'auto'}}>\n        <DataTable rowData={tableData.get(tableName)} highlight={errorLocations.get(tableName) as Set<string>} />\n      </GovUK.Tabs.Panel>\n    )\n  });\n  return (\n    <GovUK.Tabs>\n      <GovUK.Tabs.Title>Upload</GovUK.Tabs.Title>\n      <GovUK.Tabs.List>\n        {tabTitles}\n      </GovUK.Tabs.List>\n      {tabPanels}\n    </GovUK.Tabs>\n  )\n}","import * as GovUK from 'govuk-react';\nimport { DebounceInput } from 'react-debounce-input';\nimport { useMemo, useCallback, useState, useEffect, ReactElement } from 'react';\nimport { ValidatedData } from './../types';\nimport styled from 'styled-components';\n\ninterface ErrorDisplayProps {\n  validatedData: ValidatedData,\n  setChildFilter: (arg: string | null) => void;\n  setErrorFilter: (arg: string | null) => void;\n  setShown: (arg: boolean) => void;\n  innerRef: React.RefObject<HTMLInputElement>\n}\n\n// The margin-bottom has to equal height + margin-top + border (top/bottom) + padding (top/bottom)\nconst ErrorStyles = styled.div`\n.floatingContainer {\n  display: block;\n  position: relative;\n  padding: 10px 10px;\n  top: 0;\n  left: 100px;\n  width: 300px;\n  height: 300px;\n  margin-top: 5px;\n  margin-bottom: -327px;\n  border: 1px solid black;\n  background-color: #fff;\n  font-size: 10px;\n}  \n\n.floatingClose {\n  cursor: pointer;\n  float: right;\n  position: relative;\n  top: -23px;\n  left: 10px;\n}\n\ninput {\n  height: 13px;\n  width: 180px;\n}\n\n.errorFilter {\n  height: 250px;\n  overflow-y: scroll;\n  padding-right: 10px;\n}\n\ntable {\n  font-size: 10px;\n}\n\n.selectedError {\n  background-color: #ccc;\n}\n`\n\nexport default function ErrorDisplay({ validatedData, setChildFilter, setErrorFilter, setShown, innerRef }: ErrorDisplayProps): ReactElement {\n  const [filterText, setFilterText] = useState('');\n  const [selectedError, setSelectedError] = useState(null);\n\n  const errorRows = useMemo<Array<ReactElement>>(() => {\n    let errorCounts = new Map();\n    validatedData.errors.forEach(locationToError => {\n      locationToError.forEach(errorCodes => {\n        errorCodes.forEach(errorCode => {\n          errorCounts.set(errorCode, errorCounts.get(errorCode) ? errorCounts.get(errorCode) + 1 : 1)\n        })\n      })\n    });\n\n    let errorCountsArr = Array.from(errorCounts.entries());\n    errorCountsArr.sort(([, firstCount], [, secondCount]) => secondCount - firstCount);\n    return errorCountsArr.map(([errorCode, count]) => {\n      let errorDetails = validatedData.errorDefinitions.get(errorCode);\n      let isSelected = errorCode === selectedError\n      \n      return (\n          <GovUK.Table.Row key={errorCode} className={isSelected ? 'selectedError' : null} onClick={() => setSelectedError(isSelected ? null : errorCode)}>\n            <GovUK.Table.Cell>{errorCode}</GovUK.Table.Cell>\n            <GovUK.Table.Cell>{errorDetails?.get('description')}</GovUK.Table.Cell>\n            <GovUK.Table.Cell>{count}</GovUK.Table.Cell>\n          </GovUK.Table.Row>\n      )\n    })\n  }, [validatedData, selectedError]);\n\n  useEffect(() => {\n    setChildFilter(filterText);\n  }, [filterText, setChildFilter])\n\n  useEffect(() => {\n    setErrorFilter(selectedError);\n  }, [selectedError, setErrorFilter])\n\n  const clearFilters = useCallback(() => {\n    setFilterText('');\n    setSelectedError(null);\n  }, [setFilterText])\n\n  return (\n    <ErrorStyles>\n      <div ref={innerRef} className='floatingContainer'>\n        <DebounceInput minLength={2} debounceTimeout={150} onChange={event => setFilterText(event.target.value)} value={filterText} placeholder=\"Enter a child ID to filter...\" />\n        <span onClick={() => setShown(false)} className='floatingClose'>[x]</span>\n        <button style={{float: 'right'}} onClick={clearFilters}>Clear filters</button>\n        <p>Click each row to filter for only that error type.</p>\n        <div className='errorFilter'>\n          <GovUK.Table>\n            <GovUK.Table.Row>\n              <GovUK.Table.CellHeader>Code</GovUK.Table.CellHeader>\n              <GovUK.Table.CellHeader>Message</GovUK.Table.CellHeader>\n              <GovUK.Table.CellHeader>Count</GovUK.Table.CellHeader>\n            </GovUK.Table.Row>\n            {errorRows}\n          </GovUK.Table>\n        </div>\n      </div>\n    </ErrorStyles>\n  )\n}","import * as GovUK from 'govuk-react';\nimport ChildSelector from './ChildSelector';\nimport { useState, useMemo, useEffect, useRef, ReactElement } from 'react';\nimport { headerTableName, childColumnName } from './../config';\nimport DataTable from './DataTable';\nimport TabbedData from './TabbedData';\nimport ErrorDisplay from './ErrorDisplay';\nimport { DataRow, ParsedData, ValidatedData, ErrorLocations } from './../types';\n\ninterface ValidatorProps {\n  validatedData: ValidatedData\n}\n\nexport default function Validator({ validatedData }: ValidatorProps) {\n  let [childFilter, setChildFilter] = useState<string | null>(null);\n  let [errorFilter, setErrorFilter] = useState<string | null>(null);\n  let [selectedChild, setSelectedChild] = useState<string | null>(null);\n  let [errorDisplayShown, setErrorDisplayShown] = useState(false);\n\n  let errorDisplayRef = useRef(null);\n\n  // Scroll to top when this renders\n  useEffect(() => window.scrollTo(0, 0), [])\n\n\n  // Close error display if click outside\n  useEffect(() => {\n    const handleClickOutside = async (event: any) => {\n      if (errorDisplayRef.current && !(errorDisplayRef.current as any).contains(event.target)) {\n        setErrorDisplayShown(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside)\n    }\n\n  }, [errorDisplayRef])\n\n  /**\n   * Filters the data that is shown to the selected child\n   */\n  const filteredData = useMemo(() => {\n    let filteredData: ParsedData = new Map();\n    validatedData.data.forEach((_, key) => {\n      filteredData.set(key, filterDataToChildId(validatedData.data, selectedChild, key))\n    })\n    return filteredData;\n  }, [validatedData, selectedChild])\n\n  /**\n   * Computes a set of error locations used for highlighting. These are coordinates (index, columnName).\n   * The co-ordinates are then stringify-ed to allow hash comparison in a Set.\n   */\n  const errorLocations = useMemo<ErrorLocations>(() => {\n    const errorLocations = new Map();\n    validatedData.errors.forEach((errorLocation, fileName) => {\n      let errors = new Set();\n      errorLocation.forEach((errorCodes, index) => {\n        errorCodes.forEach(errorCode => {\n          let affectedFields = validatedData.errorDefinitions.get(errorCode)?.get('affected_fields') as Array<String>\n          affectedFields.forEach(field => {\n            errors.add(JSON.stringify([index, field]));\n          });\n        });\n      });\n      errorLocations.set(fileName, errors);\n    })\n\n    return errorLocations;\n  }, [validatedData])\n\n  /**\n   * Computes the list of errors for each child.\n  */\n  const childIdsWithErrors = useMemo<Array<[string, Array<string>]>>(() => {\n    let errorsByChildId = getErrorsByChildId(validatedData);\n    return Array.from(errorsByChildId.entries());\n  }, [validatedData])\n  \n  /**\n   * The child ID errors then get filtered to include only filtered Child IDs, or filtered errors.\n   * If a filter is not set it is assumed we should see everything.\n   * We then compute counts to pass to ChildSelector\n   */\n  const filteredIdsWithErrorCounts = useMemo<Array<[string, number]>>(() => {\n    let filteredIds: Array<[string, number]> = [];\n    for (let [childId, errors] of childIdsWithErrors) {\n      let numErrors = errors.filter(e => errorFilter ? e === errorFilter : true).length;\n      let childMatches = childFilter ? childId.toString().includes(childFilter) : true;\n      let errorMatches = errorFilter ? numErrors > 0 : true;\n\n      if (childMatches && errorMatches) {\n        filteredIds.push([childId, numErrors]);\n      }\n    }\n    return filteredIds;\n  }, [childIdsWithErrors, childFilter, errorFilter]);\n\n  const childErrors = useMemo<Array<ReactElement>>(() => {\n    let errors = getErrorsForChild(validatedData, selectedChild);\n    const errorToString = ((errorCode: string) => {\n      let error = validatedData.errorDefinitions.get(errorCode);\n      return `Error ${error?.get('code')} - ${error?.get('description')}`\n    });\n\n    return Array.from(errors.entries()).map(([i, e]) => <GovUK.ListItem key={i} style={{fontSize: '1em'}}>{errorToString(e)}</GovUK.ListItem>);\n  }, [validatedData, selectedChild])\n\n  return (\n    <>\n    <GovUK.GridRow mb={5}>\n      <GovUK.GridCol setWidth='200px'>\n        <div>\n          <GovUK.H4 mb={8} style={{'display': 'inline', 'marginRight': '10px'}}>Child ID</GovUK.H4>\n          <button \n            onClick={event => {\n              // Stop the click-outside event from also firing\n              event.stopPropagation();\n              setErrorDisplayShown(!errorDisplayShown);\n            }} \n            style={{display: 'inline', backgroundColor: (childFilter || errorFilter) ? '#a7c2d1' : undefined}}\n          >Filter</button>\n        </div>\n        {errorDisplayShown\n          && <ErrorDisplay innerRef={errorDisplayRef} validatedData={validatedData} setChildFilter={setChildFilter} setErrorFilter={setErrorFilter} setShown={setErrorDisplayShown}/>\n        }\n        <ChildSelector childIds={filteredIdsWithErrorCounts} selected={selectedChild} setSelected={setSelectedChild} />\n      </GovUK.GridCol>\n      <GovUK.GridCol>\n        {selectedChild\n        ? (\n            <>\n            <div style={{width: '50%'}}>\n              <GovUK.H4>Header</GovUK.H4>\n              <DataTable rowData={filteredData.get(headerTableName)} highlight={errorLocations.get(headerTableName) as Set<string>} />\n            </div>\n            <GovUK.SectionBreak mb={9}/>\n            <TabbedData tableData={filteredData} errorLocations={errorLocations} excludedTable={headerTableName} />\n            {childErrors.length > 0\n              ? (\n                <>\n                <GovUK.H4>Errors</ GovUK.H4>\n                <GovUK.UnorderedList style={{fontSize: '1em'}}>\n                  {childErrors}\n                </GovUK.UnorderedList>\n                </>\n                )\n              : <></>\n            }\n            </>\n          )\n        : <GovUK.Caption>Select a child...</GovUK.Caption>\n        }\n      </GovUK.GridCol>\n    </GovUK.GridRow>\n    </>\n  )\n}\n\nfunction filterDataToChildId(parsedData: ParsedData, selectedChild: string | null, wantedTable: string) {\n  let rowData: Array<DataRow> = [];\n\n  parsedData.get(wantedTable)?.forEach(childData => {\n      let child_id = childData.get(childColumnName);\n      if (child_id === selectedChild) {\n        rowData.push(childData);\n      }\n  });\n  return rowData;\n}\n\nfunction getErrorsForChild({data: parsedData, errors: dataErrors}: ValidatedData, childId: string | null): Array<string> {\n  if (!childId) { return []; }\n\n  let allErrors: Array<string> = [];\n\n  parsedData.forEach((data, fileName) => {\n    data.forEach(row => {\n      if (row.get(childColumnName) === childId) {\n        let index = row.get('Index') as number;\n        let errors = dataErrors.get(fileName)?.get(index);\n        if (errors) {errors.forEach(e => allErrors.push(e))}\n      }\n    })\n  })\n\n  return allErrors;\n}\n\nfunction getErrorsByChildId({data: parsedData, errors: dataErrors}: ValidatedData): Map<string, Array<string>> {\n  let allErrors: Map<string, Array<string>> = new Map();\n\n  parsedData.forEach((data, fileName) => {\n    data.forEach(row => {\n      let childId = row.get(childColumnName) as string;\n      if (!allErrors.has(childId)) {allErrors.set(childId, []);}\n      let index = row.get('Index') as number;\n      let errors = dataErrors.get(fileName)?.get(index);\n      if (errors) {errors.forEach(e => allErrors.get(childId)?.push(e))}\n    })\n  })\n\n  return allErrors;\n}","import * as GovUK from 'govuk-react';\nimport { useCallback, useState, ReactElement } from 'react';\nimport { FileRejection, useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FilesCallback, UploadedFile } from './../types';\n\ninterface DropzoneUploaderProps {\n  onFiles: FilesCallback,\n  description: string,\n  accept: string,\n  displayedFiles: Array<UploadedFile>\n};\n\nconst UploadStyle = styled.div`\n  border: 2px dashed #999999;\n  padding: 5px;\n  color: #666666;\n\n  ul, li {\n    color: #666666;\n  }\n`\n\nexport default function DropzoneUploader({onFiles, description, accept, displayedFiles}: DropzoneUploaderProps): ReactElement {\n  let [error, setError] = useState<string | null>();\n\n  const onDrop = useCallback(\n    (acceptedFiles, rejectedFiles) => {\n      onFiles({ description, acceptedFiles });\n\n      rejectedFiles.forEach( (file: FileRejection) => {\n        setError(file.errors[0].message)\n      });\n  }, [setError, description, onFiles])\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, accept})\n\n  const displayText = () => {\n    if (error) {\n      return <p style={{color: 'red'}}>{error}</p>\n    } else if (isDragActive) {\n      return <p>Drop the file(s) here ...</p>\n    } else if (displayedFiles.length === 0) {\n      return <p>Drop file(s) here, or click to select</p>\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <UploadStyle {...getRootProps()}>\n      <input {...getInputProps()} />\n      {displayedFiles.length > 0 && (\n        <>\n        <GovUK.Paragraph mb={1}>Located files (click to add more):</GovUK.Paragraph>\n        <GovUK.UnorderedList mb={1}>{displayedFiles.map(file => <GovUK.ListItem key={file.name}>{file.name}</GovUK.ListItem>)}</GovUK.UnorderedList>\n        </>\n      )}\n      {displayText()}\n    </UploadStyle>\n  )\n}","import styled from 'styled-components';\nimport { useCallback, useState, ReactElement } from 'react';\nimport * as GovUK from 'govuk-react';\nimport DropzoneUploader from './DropzoneUploader';\nimport { ErrorSelected, FilesCallback, UploadedFile, UploadedFilesCallback } from './../types';\n\ninterface UploaderProps { \n  currentFiles: Array<UploadedFile>,\n  addFileContent: UploadedFilesCallback,\n  uploadErrors: Array<any>,\n  selectedErrors: Array<ErrorSelected>,\n  setSelectedErrors: (arg1: Array<ErrorSelected>) => void;\n};\n\nconst UploaderStyles = styled.div`\n.disabled {\n  opacity: 50%;\n  pointer-events: none;\n}\n\n.disabledMode {\n  opacity: 50%;\n  pointer-events: none;\n  text-decoration: line-through;\n}\n`\n\nexport default function Uploader({ currentFiles, addFileContent, uploadErrors, selectedErrors, setSelectedErrors }: UploaderProps): ReactElement {\n  const [fileMode, setFileMode] = useState('csv');\n\n  const onFilesUploaded = useCallback<FilesCallback>(({description, acceptedFiles}) => {\n    acceptedFiles.forEach( file => {\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('File reading failed.')\n      reader.onerror = () => console.log('File reading error.')\n      reader.onload = () =>  {\n        const fileText = reader.result as ArrayBuffer;\n        console.log(`Finished reading (${description}) file ${file.name}.`);\n        addFileContent({name: file.name, description, fileText });\n      }\n\n      reader.readAsArrayBuffer(file);\n    })\n  }, [addFileContent])\n\n  return (\n    <UploaderStyles>\n      <GovUK.Paragraph>\n        This tool will load Python code in your web browser to read and validate your SSDA903 data files locally. None of your SSDA903 data will leave your network via this tool. You can safely use it without installing additional software, and without any data sharing agreement. Once the Python code has loaded, the tool will work entirely offline.\n      </ GovUK.Paragraph>\n      <GovUK.Paragraph>\n        To begin, use the boxes below to locate your local SSDA903 file outputs for the relevant year. Choose which validation rules you want to run, and use the “Validate” button to get started.\n      </ GovUK.Paragraph>\n      <GovUK.Details summary=\"Instructions\">\n      <b>1.</b> Add your files to the loading boxes below. If using CSV's, you can validate with any or all of the tables, but validation checks which are missing the necessary data will not run.<br /><br />\n      <b>2.</b> Select your Local Authority and the relevant Collection Year.<br /><br />\n      <b>3.</b> If you only want to only run the validation for certain rules, use the <b>'Validation Rules'</b> dropdown to select the ones you want.<br /><br />\n      <b>4.</b> Click <b>'Validate'</b> to run the selected checks. When complete, the Error Display screen will appear.<br /><br />\n      <b>5.</b> On the Error Display screen:\n      <ul>\n          <li> Use the <b>'Child ID'</b> sidebar to select individual children. </li>\n          <li> Use the tabs to see the selected Child ID's data in a particular module. Cells with errors are highlighted in red. </li>\n          <li> If you click the <b>'Filter'</b> button, you can type to search for a Child ID, or scroll down and click to display only children with a particular error. </li>\n          <li> To download the Error Report spreadsheet, scroll to the bottom of the page and click the <b>'Download Error Reports'</b> button</li>\n      </ul>\n      </ GovUK.Details>\n      <GovUK.GridRow>\n           <GovUK.GridCol >\n                <GovUK.H3>Ofsted Provider Information Lookup Tables</GovUK.H3>\n           </GovUK.GridCol>\n      </GovUK.GridRow>\n      <GovUK.GridRow>\n            <GovUK.GridCol setWidth=\"one-half\">\n                <GovUK.H6>Children's Homes List</GovUK.H6>\n                <DropzoneUploader description=\"CH lookup\" onFiles={onFilesUploaded} accept='.xlsx,.xlsm,.xls' displayedFiles={currentFiles.filter(f => f.description === 'CH lookup')} />\n           </GovUK.GridCol>\n           <GovUK.GridCol setWidth=\"one-half\">\n                <GovUK.H6>Social Care Providers List</GovUK.H6>\n                <DropzoneUploader description=\"SCP lookup\" onFiles={onFilesUploaded} accept='.xlsx,.xlsm,.xls' displayedFiles={currentFiles.filter(f => f.description === 'SCP lookup')} />\n           </GovUK.GridCol>\n        </GovUK.GridRow><GovUK.GridRow>\n            <GovUK.GridCol>\n                <GovUK.Paragraph />\n                <GovUK.Details summary=\"Help with adding provider info tables\">\n                    <GovUK.Paragraph />\n                    <GovUK.Paragraph>\n                        If you wish to perform the checks concerning providers' details such as URN, postcode, or\n                        placement code, add both Ofsted tables to their respective box above.\n                    </GovUK.Paragraph><GovUK.Paragraph>\n                        You must provide both tables or the upload will fail.\n                    </GovUK.Paragraph><GovUK.Paragraph>\n                        Note that this will add up to five minutes to the processing time, as reading Excel documents in\n                        Pyodide can be very slow!\n                    </GovUK.Paragraph>\n                </GovUK.Details>\n            </GovUK.GridCol>\n          </GovUK.GridRow>\n          <GovUK.H3>SSDA903 Data</GovUK.H3>\n      <GovUK.Tabs>\n        <GovUK.Tabs.Title>Locate</GovUK.Tabs.Title>\n        <GovUK.Tabs.List>\n          <GovUK.Tabs.Tab onClick={() => setFileMode('csv')} selected={fileMode === 'csv'} \n            className={fileMode !== 'csv' && currentFiles.length > 0 ? 'disabledMode' : null}>CSV Files</GovUK.Tabs.Tab>\n          <GovUK.Tabs.Tab onClick={() => setFileMode('xml')} selected={fileMode === 'xml'}\n            className={fileMode !== 'xml' && currentFiles.length > 0 ? 'disabledMode' : null}>XML Files (Experimental)</GovUK.Tabs.Tab>\n        </GovUK.Tabs.List>\n        <GovUK.Tabs.Panel selected={fileMode === 'csv'}>\n          <GovUK.Details summary=\"Show column headers required for each CSV file - these must match exactly!\">\n            <b>Header:</b> <br />CHILD,SEX,DOB,ETHNIC,UPN,MOTHER,MC_DOB\n            <br /><br />\n            <b>Episodes:</b> <br /> CHILD,DECOM,RNE,LS,CIN,PLACE,PLACE_PROVIDER,DEC,REC,REASON_PLACE_CHANGE,HOME_POST,PL_POST,URN\n            <br /><br />\n            <b>UASC:</b><br />  CHILD,SEX,DOB,DUC\n            <br /><br />\n            <b>Outcomes (OC2):</b><br /> CHILD,DOB,SDQ_SCORE,SDQ_REASON,CONVICTED,HEALTH_CHECK,IMMUNISATIONS,TEETH_CHECK,HEALTH_ASSESSMENT,SUBSTANCE_MISUSE,INTERVENTION_RECEIVED,INTERVENTION_OFFERED\n            <br /><br />\n            <b>Adoption (AD1):</b><br />  CHILD,DOB,DATE_INT,DATE_MATCH,FOSTER_CARE,NB_ADOPTR,SEX_ADOPTR,LS_ADOPTR\n            <br /><br />\n            <b>Should be Placed for Adoption:</b><br />  CHILD,DOB,DATE_PLACED,DATE_PLACED_CEASED,REASON_PLACED_CEASED\n            <br /><br />\n            <b>Care Leavers (OC3): </b><br /> CHILD,DOB,IN_TOUCH,ACTIV,ACCOM\n            <br /><br />\n            <b>Reviews:</b><br />  CHILD,DOB,REVIEW,REVIEW_CODE\n            <br /><br />\n            <b>Previous Permanence:</b> <br /> CHILD,DOB,PREV_PERM,LA_PERM,DATE_PERM\n            <br /><br />\n            <b>Missing:</b><br />  CHILD,DOB,MISSING,MIS_START,MIS_END\n          </GovUK.Details>\n\n          <GovUK.GridRow>\n            <GovUK.GridCol>\n              <GovUK.H6>This year</GovUK.H6>\n              <DropzoneUploader description='This year (CSV)' onFiles={onFilesUploaded} accept='.csv' displayedFiles={currentFiles.filter(f => f.description === 'This year (CSV)')} />\n            </GovUK.GridCol>\n            <GovUK.GridCol setWidth=\"one-half\" className={currentFiles.length > 0 ? null : 'disabled'}>\n              <GovUK.H6>Previous year</GovUK.H6>\n              <DropzoneUploader description='Prev year (CSV)' onFiles={onFilesUploaded} accept='.csv' displayedFiles={currentFiles.filter(f => f.description === 'Prev year (CSV)')} />\n            </GovUK.GridCol>\n          </GovUK.GridRow>\n        </GovUK.Tabs.Panel>\n        <GovUK.Tabs.Panel selected={fileMode === 'xml'}>\n          <GovUK.Paragraph>\n             There are known issues with XML loading at present; this may or may not work depending on the structure of your file.\n          </GovUK.Paragraph>\n          <GovUK.Paragraph>\n             Please report any issues using the link at the top of this page.\n          </GovUK.Paragraph>\n          <GovUK.GridRow>\n            <GovUK.GridCol>\n              <GovUK.H6>This year</GovUK.H6>\n              <DropzoneUploader description='This year (XML)' onFiles={onFilesUploaded} accept='.xml' displayedFiles={currentFiles.filter(f => f.description === 'This year (XML)')} />\n            </GovUK.GridCol>\n            <GovUK.GridCol setWidth=\"one-half\" className={currentFiles.length > 0 ? null : 'disabled'}>\n              <GovUK.H6>Previous year</GovUK.H6>\n              <DropzoneUploader description='Prev year (XML)' onFiles={onFilesUploaded} accept='.xml' displayedFiles={currentFiles.filter(f => f.description === 'Prev year (XML)')} />\n            </GovUK.GridCol>\n          </GovUK.GridRow>\n        </GovUK.Tabs.Panel>\n      </GovUK.Tabs>\n\n      {uploadErrors.length > 0\n        ? (\n          <GovUK.Details summary=\"Errors\" open>\n            {Array.from(uploadErrors.entries(), ([i, error]) => <GovUK.ErrorText key={i}>{error.toString()}</GovUK.ErrorText>)}\n          </GovUK.Details>\n        )\n        : null\n      }\n    </UploaderStyles>\n  )\n}\n","import {saveAs} from \"file-saver\";\nimport dayjs from \"dayjs\";\nimport {captureException} from \"../sentry\";\n\nexport const saveErrorSummary = async (report_type: string) => {\n    const time = dayjs().format('YYYYMMDD-HHmmss')\n    const report_name = report_type === \"ChildErrorSummary\" ? 'children' : 'errors';\n    const pyodide = window.pyodide;\n    try {\n        const report = pyodide.globals.get(\"report\");\n        const report_data = report.csv_report(report_name);\n        let errorSummaryContent = new Blob([report_data],\n            {type: 'text/csv'});\n        report.destroy()\n        saveAs(errorSummaryContent, `${report_type}-${time}.csv`);\n    } catch (error) {\n        console.error('Caught Error!', error)\n        const pythonError = (error as Error).toString()\n        captureException(error, {pythonError})\n    }\n}\n\nexport const saveExcelSummary = async () => {\n    const time = dayjs().format('YYYYMMDD-HHmmss')\n    const pyodide = window.pyodide;\n    try {\n        const report = pyodide.globals.get(\"report\");\n        const report_data = report.excel_report()\n        let errorSummaryContent = new Blob([report_data.toJs],\n            {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n        report.destroy()\n        report_data.destroy()\n        saveAs(errorSummaryContent, `ErrorReport-${time}.xlsx`);\n    } catch (error) {\n        console.error('Caught Error!', error)\n        const pythonError = (error as Error).toString()\n        captureException(error, {pythonError})\n    }\n}\n\nexport const saveLoadedFiles = async (table_name: string) => {\n    const time = dayjs().format('YYYYMMDD-HHmmss')\n    const pyodide = window.pyodide;\n    try {\n        const csv_string_dict = pyodide.globals.get('csv_string_dict').toJs();\n        const csv_string = csv_string_dict.get(table_name);\n        let csvDownloadContent = new Blob([csv_string],\n            {type: 'text/csv'});\n        saveAs(csvDownloadContent, `${table_name}-${time}.csv`);\n    } catch (error) {\n        console.error('Caught Error!', error)\n        const pythonError = (error as Error).toString()\n        captureException(error, {pythonError})\n    }\n}\n","import authorities from 'quality-lac-data-ref-authorities/qlacref_authorities/records.json';\nimport {LaData, LaMap} from \"../types\";\n\nconst laReducer = (map: LaMap, value: LaData): LaMap => {\n    map[value.la_id] = value;\n    return map;\n}\n\nexport const laMap = authorities.map(x => {return {\n    la_id: x.UTLA21CD,\n    la_name: x.UTLA21NM,\n}}).reduce(laReducer, {})\n\nexport const laData = Object.values(laMap).sort((a, b) => a.la_name > b.la_name? 1 : -1)\n","export const analyticsInit = () => {\n    const measurementID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n    if (!measurementID) {\n        return;\n    }\n\n    const id = `ga-script-include`;\n    const existing = document.getElementById(id);\n    if (!existing) {\n        const script = document.createElement('script');\n        script.id = id;\n        script.async = true;\n        script.src = `https://www.googletagmanager.com/gtag/js?id=${measurementID}`\n        document.head.append(script);\n        const dlScript = document.createElement('script');\n        dlScript.innerHTML = `\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\ngtag('config', '${measurementID}')`\n        document.head.append(dlScript);\n    }\n}\n\nexport const gtag = (...args: any[]) => {\n    window.gtag && window.gtag(...args);\n}\n\nexport const pageview = () => {\n    gtag('pageview');\n}\n\nexport const event = (action: string, event_category: string, event_label?: string, value?: bigint) => {\n    gtag('event', action, {event_category, event_label, value});\n}","import * as GovUK from 'govuk-react';\nimport { Spinner } from '@govuk-react/icons';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { handleUploaded903Data, loadErrorDefinitions, loadPyodide } from '../api';\nimport Validator from \"./Validator\";\nimport Uploader from \"./Uploader\";\nimport {\n  ErrorSelected,\n  UploadedFile,\n  UploadedFilesCallback,\n  UploadMetadata,\n  ValidatedData\n} from '../types';\nimport { useMemo } from 'react';\nimport {\n  saveErrorSummary, saveLoadedFiles,\n} from \"../helpers/report/childErrorReport\";\nimport {laData} from \"../helpers/authorityData\";\nimport {event} from \"../helpers/googleAnalytics\";\n\nexport default function Dashboard() {\n  const [loadingText, setLoadingText] = useState(\"Loading Python initially (takes around 30 seconds)...\");\n  const [fileContents, setFileContents] = useState<Array<UploadedFile>>([]);\n  const [uploadErrors, setUploadErrors] = useState<Array<any>>([]);\n  const [validatedData, setValidatedData] = useState<ValidatedData | null>();\n  const [selectedErrors, setSelectedErrors] = useState<Array<ErrorSelected>>([]);\n  const [localAuthority, setLocalAuthority] = useState<string>(laData[0].la_id);\n\n  const collectionYears = useMemo(() => getCollectionYears(5), []);\n  const [collectionYear, setCollectionYear] = useState<string>(collectionYears[0]);\n\n  useEffect(() => {\n    (async () => {\n      await loadPyodide();\n      event('pyodide', 'loaded')\n      let selectedErrors = await loadErrorDefinitions();\n      setSelectedErrors(selectedErrors);\n      setLoadingText(\"\");\n    })();\n  }, [])\n\n  const addFileContent = useCallback<UploadedFilesCallback>(uploadedFile => {\n    event('click', 'addFile')\n    fileContents.push(uploadedFile); // We have to push to the old state in case the callback isn't updated in children\n    setFileContents([...fileContents]);\n  }, [fileContents])\n\n  const clearAndRestart = useCallback(() => {\n    event('click', 'clear')\n    setUploadErrors([]);\n    setValidatedData(null);\n    setFileContents([]);\n  }, [])\n\n  const runValidation = useCallback(async () => {\n    event('click', 'validate')\n    setUploadErrors([]);\n    setLoadingText(\"Loading postcode file (initial load takes 60 seconds)...\");\n    const metadata: UploadMetadata = {\n      localAuthority: localAuthority as string,\n      collectionYear: collectionYear,\n    }\n    setLoadingText(\"Running validation...\")\n    let [newValidatedData, pythonErrors] = await handleUploaded903Data(fileContents, selectedErrors, metadata);\n    if (pythonErrors.length === 0) {\n      setValidatedData(newValidatedData);\n    } else {\n      clearAndRestart();\n      setUploadErrors(pythonErrors)\n    }\n    setLoadingText(\"\");\n  }, [fileContents, selectedErrors, clearAndRestart, localAuthority, collectionYear])\n\n  const downloadCSVs = useCallback( async () => {\n    event('click', 'download')\n    if (validatedData) {\n        await saveErrorSummary('ErrorCounts');\n        await saveErrorSummary('ChildErrorSummary');\n    }\n\n\n  }, [validatedData])\n\n  const downloadLoadedCSVs = useCallback( async () => {\n    event('click', 'download')\n    if (validatedData) {\n        await saveLoadedFiles('Header');\n        await saveLoadedFiles('Episodes');\n        await saveLoadedFiles('UASC');\n        await saveLoadedFiles('OC2');\n        await saveLoadedFiles('OC3');\n        await saveLoadedFiles('AD1');\n        await saveLoadedFiles('Missing');\n        await saveLoadedFiles('Reviews');\n        await saveLoadedFiles('PlacedAdoption');\n        await saveLoadedFiles('PrevPerm');\n    }\n\n\n  }, [validatedData])\n\n  const toggleErrorSelection = useCallback(toggledError => {\n    let newSelectedErrors: Array<ErrorSelected> = [];\n    for (let error of selectedErrors) {\n      let errorCopy = { ...error }\n      if (errorCopy.code === toggledError.code) {\n        errorCopy.selected = !errorCopy.selected;\n      }\n      newSelectedErrors.push(errorCopy);\n    }\n\n    setSelectedErrors(newSelectedErrors);\n  }, [selectedErrors, setSelectedErrors])\n\n  const setAllErrors = useCallback(newState => {\n    let newSelectedErrors: Array<ErrorSelected> = [];\n    for (let error of selectedErrors) {\n      let errorCopy = { ...error }\n      errorCopy.selected = newState;\n      newSelectedErrors.push(errorCopy);\n    }\n\n    setSelectedErrors(newSelectedErrors);\n  }, [selectedErrors, setSelectedErrors])\n\n  useEffect(() => {\n    let storedValue = window.localStorage.getItem('localAuthority');\n\n    // Only set this if its present (i.e. fail if our LA list has changed)\n    if (storedValue && laData.some(la => la.la_id === storedValue)) {\n      const la = laData.find(la => la.la_id === storedValue);\n      event('la_select', 'localStore', la?.la_name || storedValue);\n      setLocalAuthority(storedValue);\n    }\n  }, [setLocalAuthority])\n\n  const changeLocalAuthority = useCallback(ev => {\n    const la = laData.find(la => la.la_id === ev.target.value);\n    event('la_select', 'user', la?.la_name || ev.target.value);\n    setLocalAuthority(ev.target.value);\n    window.localStorage.setItem('localAuthority', ev.target.value);\n  }, [setLocalAuthority]);\n\n\n  return (\n    <>\n    {validatedData\n      ? <Validator validatedData={validatedData} />\n      : <>\n        <Uploader currentFiles={fileContents} addFileContent={addFileContent} uploadErrors={uploadErrors} selectedErrors={selectedErrors} setSelectedErrors={setSelectedErrors}/>\n        <GovUK.Select input={{value: collectionYear, onChange: (e: React.ChangeEvent<HTMLInputElement>) => setCollectionYear(e.target.value)}} label='Collection Year' mb={4}>\n          {collectionYears.map(collectionYear => <option key={collectionYear} value={collectionYear}>{collectionYear}</option>)}\n        </GovUK.Select>\n\n        <GovUK.Select input={{value: localAuthority ? localAuthority : undefined, onChange: changeLocalAuthority}} label='Local Authority' mb={4}>\n          {laData.map(({la_id, la_name}) => <option key={la_id} value={la_id}>{la_name}</option>)}\n        </GovUK.Select>\n        <GovUK.Paragraph>\n          We ask you to select your Local Authority to enable proper postcode validation within the tool, and to allow us to count how many distinct LAs have used the tool. We never name LAs in this aggregate reporting.\n        </GovUK.Paragraph>\n\n      </>\n    }\n\n    <LoadingBox loading={loadingText}>\n      <GovUK.Details summary={`Validation Rules (${selectedErrors.filter(e => e.selected).length} selected, ${selectedErrors.filter(e => !e.selected).length} unselected)`}>\n        <GovUK.Button onClick={() => setAllErrors(true)}>Select All </GovUK.Button> <GovUK.Button onClick={() => setAllErrors(false)}>Deselect All </GovUK.Button>\n        {selectedErrors.map(error => <GovUK.Checkbox key={error.code} checked={error.selected} onChange={() => toggleErrorSelection(error)}>{error.code} - {error.description}</GovUK.Checkbox>)}\n      </GovUK.Details>\n\n\n\n      <div style={{marginRight: '10%', display: 'inline'}}>\n        <GovUK.Button onClick={runValidation}>Validate</GovUK.Button>\n      </div>\n      <div style={{marginRight: '10%', display: 'inline'}}>\n        <GovUK.Button onClick={clearAndRestart}>Clear Data and Start Again</GovUK.Button>\n      </div>\n      <div style={{marginRight: '10%', display: 'inline'}}>\n        {validatedData\n          ? <GovUK.Button onClick={downloadCSVs}>Download Error Reports</GovUK.Button>\n          : <GovUK.Button buttonColour='gray' disabled>Download Error Reports</GovUK.Button>\n        }\n      </div>\n      <div style={{marginRight: '10%', display: 'inline'}}>\n        {validatedData\n          ? <GovUK.Button onClick={downloadLoadedCSVs}>Download 903 CSVs</GovUK.Button>\n          : <GovUK.Button buttonColour='gray' disabled>Download 903 CSVs</GovUK.Button>\n        }\n      </div>\n    </LoadingBox>\n    </>\n  )\n}\n\nfunction LoadingBox({children, loading}: any) {\n  if (loading) {\n    return (\n      <div style={{ position: 'relative', pointerEvents: 'none'}}>\n        <div style={{width: '100%', position: 'absolute', display: 'flex', justifyContent: 'center', flexWrap: 'wrap'}}>\n          <div style={{width: '100%', textAlign: 'center', height: '25px', fontSize: '24px'}}>{loading}</div>\n          <Spinner style={{width: '50px', height: '50px', display: 'block'}} />\n        </div>\n        <div style={{opacity: '30%'}}>\n          {children}\n        </div>\n      </div>\n    )\n  } else {\n    return children\n  }\n}\n\nfunction getCollectionYears(num_years: number): Array<string> {\n  let currentDate = new Date();\n  let currentYear = currentDate.getFullYear()\n  if (currentDate.getMonth() < 4) {\n    currentYear = currentYear - 1\n  }\n  let years = [currentYear]\n  for (let i = 1; i < num_years; i++) {\n    years.push(currentYear - i)\n  }\n\n  return years.map(year => `${year}/${(year + 1) % 100}`)\n}","import * as GovUK from 'govuk-react';\nimport { MemoryRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\n\n\nfunction App() {\n  return (\n    <Router>\n      <GovUK.GlobalStyle />\n      <GovUK.Page.WidthContainer style={{'height': '100vh', 'width': '75%', 'maxWidth': 'none'}}>\n        <GovUK.PhaseBanner level=\"beta\">This is a new service - <GovUK.Link href=\"mailto:datatoinsight.enquiries@gmail.com\">your feedback can help us improve it.</GovUK.Link></GovUK.PhaseBanner>\n        <GovUK.Page.Main>\n          <GovUK.H2>SSDA903 Data Validation Service</GovUK.H2>\n\n          <Switch>\n            <Route path=\"/application\" component={Dashboard} />\n            <Route exact path=\"/\" component={Start} />\n          </Switch>\n        </GovUK.Page.Main>\n      </GovUK.Page.WidthContainer>\n    </Router>\n  );\n}\n\nfunction Start() {\n  return (\n    <>\n    <GovUK.Paragraph>Data to Insight is a national project led by local authorities with support from the ADCS, DLUHC, DfE and Ofsted to help local authorities make better use of data. </GovUK.Paragraph>\n    <GovUK.Paragraph>This tool was developed by local authority data analysts, supported by technical expertise from our friends at Social Finance. It will let you perform the same kinds of data validation as the DfE’s SSDA903 statutory data submission tool. You can run this tool at any time, using your year-to-date extract of SSDA903 data. We recommend a monthly data checking cycle.</GovUK.Paragraph>\n    <GovUK.Paragraph>Click Start to begin.</GovUK.Paragraph>\n    <GovUK.Button start as={Link} to=\"/application\">\n      Start\n    </GovUK.Button>\n\n    <GovUK.Details summary=\"Release Notes\">\n        <u><b>Version 1.0  (08/03/2022)</b></u>\n        <p>Full set of <a href='https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1023549/CLA_SSDA903_2021-22_Validation_rules_Version_1.2.pdf'>validation checks</a> implemented</p>\n        <p></p>\n\n        <u><b>Version 0.3 (03/03/2022)</b></u>\n        <p>256 of 263 checks. Added URN lookup table upload.</p>\n        <p></p>\n\n        <u><b>Version 0.2.1 (08/02/2022)</b></u>\n        <p>Various bug fixes, and new rules: 241 of 263 checks implemented.</p>\n        <p></p>\n\n        <u><b>Version 0.2 (20/01/2022)</b></u>\n        <p>Additional rules added: 218 of 263 checks now implemented.</p>\n        <p></p>\n\n        <u><b>Version 0.1.2  (18/01/2022)</b></u>\n        <p></p>\n        <p>Minor update containing various bug fixes and 4 more validation checks.</p>\n\n        <u><b>Version 0.1.1  (03/12/2021)</b></u>\n\n        <p></p>\n        <p>This is an early release which implements the SSDA 903 validation checks for the 2021 to 2022 return as described in <a href='https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1023549/CLA_SSDA903_2021-22_Validation_rules_Version_1.2.pdf'>this document</a>.</p>\n        <p>It currently contains all 'Stage 1' rules except:\n        <ul>\n          <li>rule 1008, which requires a URN lookup table (will be added in future release)</li>\n          <li>rules 105, 205A-D & 330, which rely on the XML specification (will be added in future release)</li>\n          <li>rules 1000, 1001, 1002, 1008, 199 which require historical data held on the DfE system (will be added in future release, with the caveat of potential false positives/negatives, since this tool only accepts up to 2 years of data)</li>\n        </ul></p>\n        <p>141 of 184 'Stage 2' Rules are currently implemented, with the rest to be added over the coming weeks.</p>\n        <p>Planned features also include:\n        <ul>\n          <li>Full XML support</li>\n          <li>All URN-related validation checks</li>\n          <li>UI enhancements</li>\n          <li>Preliminary data integrity checks</li>\n        </ul>\n        </p>\n    </GovUK.Details>\n\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\nimport {init as sentryInit} from \"./helpers/sentry\";\nimport {analyticsInit, pageview} from \"./helpers/googleAnalytics\";\n\nsentryInit();\nanalyticsInit();\npageview()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}